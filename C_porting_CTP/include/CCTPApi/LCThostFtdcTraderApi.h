#ifndef LCTHOSTFTDCTRADERAPI_H
#define LCTHOSTFTDCTRADERAPI_H

#include "common_macro.h"

#ifdef __cplusplus
extern "C" {
#endif

#include "ThostFtdcUserApiStruct.h"

//define function pointers
typedef void (* fnTraderApiOnFrontConnected)();
typedef void (* fnTraderApiOnFrontDisconnected)(int nReason);
typedef void (* fnTraderApiOnHeartBeatWarning)(int nTimeLapse);
typedef void (* fnTraderApiOnRspAuthenticate)(struct CThostFtdcRspAuthenticateField *pRspAuthenticateField, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspUserLogin)(struct CThostFtdcRspUserLoginField *pRspUserLogin, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspUserLogout)(struct CThostFtdcUserLogoutField *pUserLogout, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspUserPasswordUpdate)(struct CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspTradingAccountPasswordUpdate)(struct CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspOrderInsert)(struct CThostFtdcInputOrderField *pInputOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspParkedOrderInsert)(struct CThostFtdcParkedOrderField *pParkedOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspParkedOrderAction)(struct CThostFtdcParkedOrderActionField *pParkedOrderAction, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspOrderAction)(struct CThostFtdcInputOrderActionField *pInputOrderAction, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQueryMaxOrderVolume)(struct CThostFtdcQueryMaxOrderVolumeField *pQueryMaxOrderVolume, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspSettlementInfoConfirm)(struct CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspRemoveParkedOrder)(struct CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspRemoveParkedOrderAction)(struct CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspExecOrderInsert)(struct CThostFtdcInputExecOrderField *pInputExecOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspExecOrderAction)(struct CThostFtdcInputExecOrderActionField *pInputExecOrderAction, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspForQuoteInsert)(struct CThostFtdcInputForQuoteField *pInputForQuote, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQuoteInsert)(struct CThostFtdcInputQuoteField *pInputQuote, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQuoteAction)(struct CThostFtdcInputQuoteActionField *pInputQuoteAction, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryOrder)(struct CThostFtdcOrderField *pOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryTrade)(struct CThostFtdcTradeField *pTrade, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInvestorPosition)(struct CThostFtdcInvestorPositionField *pInvestorPosition, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryTradingAccount)(struct CThostFtdcTradingAccountField *pTradingAccount, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInvestor)(struct CThostFtdcInvestorField *pInvestor, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryTradingCode)(struct CThostFtdcTradingCodeField *pTradingCode, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInstrumentMarginRate)(struct CThostFtdcInstrumentMarginRateField *pInstrumentMarginRate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInstrumentCommissionRate)(struct CThostFtdcInstrumentCommissionRateField *pInstrumentCommissionRate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryExchange)(struct CThostFtdcExchangeField *pExchange, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryProduct)(struct CThostFtdcProductField *pProduct, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInstrument)(struct CThostFtdcInstrumentField *pInstrument, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryDepthMarketData)(struct CThostFtdcDepthMarketDataField *pDepthMarketData, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQrySettlementInfo)(struct CThostFtdcSettlementInfoField *pSettlementInfo, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryTransferBank)(struct CThostFtdcTransferBankField *pTransferBank, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInvestorPositionDetail)(struct CThostFtdcInvestorPositionDetailField *pInvestorPositionDetail, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryNotice)(struct CThostFtdcNoticeField *pNotice, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQrySettlementInfoConfirm)(struct CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInvestorPositionCombineDetail)(struct CThostFtdcInvestorPositionCombineDetailField *pInvestorPositionCombineDetail, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryCFMMCTradingAccountKey)(struct CThostFtdcCFMMCTradingAccountKeyField *pCFMMCTradingAccountKey, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryEWarrantOffset)(struct CThostFtdcEWarrantOffsetField *pEWarrantOffset, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryInvestorProductGroupMargin)(struct CThostFtdcInvestorProductGroupMarginField *pInvestorProductGroupMargin, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryExchangeMarginRate)(struct CThostFtdcExchangeMarginRateField *pExchangeMarginRate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryExchangeMarginRateAdjust)(struct CThostFtdcExchangeMarginRateAdjustField *pExchangeMarginRateAdjust, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryExchangeRate)(struct CThostFtdcExchangeRateField *pExchangeRate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQrySecAgentACIDMap)(struct CThostFtdcSecAgentACIDMapField *pSecAgentACIDMap, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryOptionInstrTradeCost)(struct CThostFtdcOptionInstrTradeCostField *pOptionInstrTradeCost, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryOptionInstrCommRate)(struct CThostFtdcOptionInstrCommRateField *pOptionInstrCommRate, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryExecOrder)(struct CThostFtdcExecOrderField *pExecOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryForQuote)(struct CThostFtdcForQuoteField *pForQuote, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryQuote)(struct CThostFtdcQuoteField *pQuote, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryTransferSerial)(struct CThostFtdcTransferSerialField *pTransferSerial, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryAccountregister)(struct CThostFtdcAccountregisterField *pAccountregister, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspError)(struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRtnOrder)(struct CThostFtdcOrderField *pOrder);
typedef void (* fnTraderApiOnRtnTrade)(struct CThostFtdcTradeField *pTrade);
typedef void (* fnTraderApiOnErrRtnOrderInsert)(struct CThostFtdcInputOrderField *pInputOrder, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnOrderAction)(struct CThostFtdcOrderActionField *pOrderAction, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnRtnInstrumentStatus)(struct CThostFtdcInstrumentStatusField *pInstrumentStatus);
typedef void (* fnTraderApiOnRtnTradingNotice)(struct CThostFtdcTradingNoticeInfoField *pTradingNoticeInfo);
typedef void (* fnTraderApiOnRtnErrorConditionalOrder)(struct CThostFtdcErrorConditionalOrderField *pErrorConditionalOrder);
typedef void (* fnTraderApiOnRtnExecOrder)(struct CThostFtdcExecOrderField *pExecOrder);
typedef void (* fnTraderApiOnErrRtnExecOrderInsert)(struct CThostFtdcInputExecOrderField *pInputExecOrder, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnExecOrderAction)(struct CThostFtdcExecOrderActionField *pExecOrderAction, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnForQuoteInsert)(struct CThostFtdcInputForQuoteField *pInputForQuote, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnRtnQuote)(struct CThostFtdcQuoteField *pQuote);
typedef void (* fnTraderApiOnErrRtnQuoteInsert)(struct CThostFtdcInputQuoteField *pInputQuote, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnQuoteAction)(struct CThostFtdcQuoteActionField *pQuoteAction, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnRtnForQuoteRsp)(struct CThostFtdcForQuoteRspField *pForQuoteRsp);
typedef void (* fnTraderApiOnRspQryContractBank)(struct CThostFtdcContractBankField *pContractBank, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryParkedOrder)(struct CThostFtdcParkedOrderField *pParkedOrder, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryParkedOrderAction)(struct CThostFtdcParkedOrderActionField *pParkedOrderAction, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryTradingNotice)(struct CThostFtdcTradingNoticeField *pTradingNotice, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryBrokerTradingParams)(struct CThostFtdcBrokerTradingParamsField *pBrokerTradingParams, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQryBrokerTradingAlgos)(struct CThostFtdcBrokerTradingAlgosField *pBrokerTradingAlgos, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRtnFromBankToFutureByBank)(struct CThostFtdcRspTransferField *pRspTransfer);
typedef void (* fnTraderApiOnRtnFromFutureToBankByBank)(struct CThostFtdcRspTransferField *pRspTransfer);
typedef void (* fnTraderApiOnRtnRepealFromBankToFutureByBank)(struct CThostFtdcRspRepealField *pRspRepeal);
typedef void (* fnTraderApiOnRtnRepealFromFutureToBankByBank)(struct CThostFtdcRspRepealField *pRspRepeal);
typedef void (* fnTraderApiOnRtnFromBankToFutureByFuture)(struct CThostFtdcRspTransferField *pRspTransfer);
typedef void (* fnTraderApiOnRtnFromFutureToBankByFuture)(struct CThostFtdcRspTransferField *pRspTransfer);
typedef void (* fnTraderApiOnRtnRepealFromBankToFutureByFutureManual)(struct CThostFtdcRspRepealField *pRspRepeal);
typedef void (* fnTraderApiOnRtnRepealFromFutureToBankByFutureManual)(struct CThostFtdcRspRepealField *pRspRepeal);
typedef void (* fnTraderApiOnRtnQueryBankBalanceByFuture)(struct CThostFtdcNotifyQueryAccountField *pNotifyQueryAccount);
typedef void (* fnTraderApiOnErrRtnBankToFutureByFuture)(struct CThostFtdcReqTransferField *pReqTransfer, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnFutureToBankByFuture)(struct CThostFtdcReqTransferField *pReqTransfer, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnRepealBankToFutureByFutureManual)(struct CThostFtdcReqRepealField *pReqRepeal, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnRepealFutureToBankByFutureManual)(struct CThostFtdcReqRepealField *pReqRepeal, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnErrRtnQueryBankBalanceByFuture)(struct CThostFtdcReqQueryAccountField *pReqQueryAccount, struct CThostFtdcRspInfoField *pRspInfo);
typedef void (* fnTraderApiOnRtnRepealFromBankToFutureByFuture)(struct CThostFtdcRspRepealField *pRspRepeal);
typedef void (* fnTraderApiOnRtnRepealFromFutureToBankByFuture)(struct CThostFtdcRspRepealField *pRspRepeal);
typedef void (* fnTraderApiOnRspFromBankToFutureByFuture)(struct CThostFtdcReqTransferField *pReqTransfer, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspFromFutureToBankByFuture)(struct CThostFtdcReqTransferField *pReqTransfer, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRspQueryBankAccountMoneyByFuture)(struct CThostFtdcReqQueryAccountField *pReqQueryAccount, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
typedef void (* fnTraderApiOnRtnOpenAccountByBank)(struct CThostFtdcOpenAccountField *pOpenAccount);
typedef void (* fnTraderApiOnRtnCancelAccountByBank)(struct CThostFtdcCancelAccountField *pCancelAccount);
typedef void (* fnTraderApiOnRtnChangeAccountByBank)(struct CThostFtdcChangeAccountField *pChangeAccount);

//register callbacks
LC_CTP_API void * CreateLCCThostFtdcTraderSpi();
LC_CTP_API void ReleaseLCCThostFtdcTraderSpi(void * * pLC_Spi);
LC_CTP_API void RegisterTraderApiOnFrontConnectedCallback(void * pLC_Spi, fnTraderApiOnFrontConnected pCallback);
LC_CTP_API void RegisterTraderApiOnFrontDisconnectedCallback(void * pLC_Spi, fnTraderApiOnFrontDisconnected pCallback);
LC_CTP_API void RegisterTraderApiOnHeartBeatWarningCallback(void * pLC_Spi, fnTraderApiOnHeartBeatWarning pCallback);
LC_CTP_API void RegisterTraderApiOnRspAuthenticateCallback(void * pLC_Spi, fnTraderApiOnRspAuthenticate pCallback);
LC_CTP_API void RegisterTraderApiOnRspUserLoginCallback(void * pLC_Spi, fnTraderApiOnRspUserLogin pCallback);
LC_CTP_API void RegisterTraderApiOnRspUserLogoutCallback(void * pLC_Spi, fnTraderApiOnRspUserLogout pCallback);
LC_CTP_API void RegisterTraderApiOnRspUserPasswordUpdateCallback(void * pLC_Spi, fnTraderApiOnRspUserPasswordUpdate pCallback);
LC_CTP_API void RegisterTraderApiOnRspTradingAccountPasswordUpdateCallback(void * pLC_Spi, fnTraderApiOnRspTradingAccountPasswordUpdate pCallback);
LC_CTP_API void RegisterTraderApiOnRspOrderInsertCallback(void * pLC_Spi, fnTraderApiOnRspOrderInsert pCallback);
LC_CTP_API void RegisterTraderApiOnRspParkedOrderInsertCallback(void * pLC_Spi, fnTraderApiOnRspParkedOrderInsert pCallback);
LC_CTP_API void RegisterTraderApiOnRspParkedOrderActionCallback(void * pLC_Spi, fnTraderApiOnRspParkedOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnRspOrderActionCallback(void * pLC_Spi, fnTraderApiOnRspOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnRspQueryMaxOrderVolumeCallback(void * pLC_Spi, fnTraderApiOnRspQueryMaxOrderVolume pCallback);
LC_CTP_API void RegisterTraderApiOnRspSettlementInfoConfirmCallback(void * pLC_Spi, fnTraderApiOnRspSettlementInfoConfirm pCallback);
LC_CTP_API void RegisterTraderApiOnRspRemoveParkedOrderCallback(void * pLC_Spi, fnTraderApiOnRspRemoveParkedOrder pCallback);
LC_CTP_API void RegisterTraderApiOnRspRemoveParkedOrderActionCallback(void * pLC_Spi, fnTraderApiOnRspRemoveParkedOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnRspExecOrderInsertCallback(void * pLC_Spi, fnTraderApiOnRspExecOrderInsert pCallback);
LC_CTP_API void RegisterTraderApiOnRspExecOrderActionCallback(void * pLC_Spi, fnTraderApiOnRspExecOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnRspForQuoteInsertCallback(void * pLC_Spi, fnTraderApiOnRspForQuoteInsert pCallback);
LC_CTP_API void RegisterTraderApiOnRspQuoteInsertCallback(void * pLC_Spi, fnTraderApiOnRspQuoteInsert pCallback);
LC_CTP_API void RegisterTraderApiOnRspQuoteActionCallback(void * pLC_Spi, fnTraderApiOnRspQuoteAction pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryOrderCallback(void * pLC_Spi, fnTraderApiOnRspQryOrder pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryTradeCallback(void * pLC_Spi, fnTraderApiOnRspQryTrade pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInvestorPositionCallback(void * pLC_Spi, fnTraderApiOnRspQryInvestorPosition pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryTradingAccountCallback(void * pLC_Spi, fnTraderApiOnRspQryTradingAccount pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInvestorCallback(void * pLC_Spi, fnTraderApiOnRspQryInvestor pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryTradingCodeCallback(void * pLC_Spi, fnTraderApiOnRspQryTradingCode pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInstrumentMarginRateCallback(void * pLC_Spi, fnTraderApiOnRspQryInstrumentMarginRate pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInstrumentCommissionRateCallback(void * pLC_Spi, fnTraderApiOnRspQryInstrumentCommissionRate pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryExchangeCallback(void * pLC_Spi, fnTraderApiOnRspQryExchange pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryProductCallback(void * pLC_Spi, fnTraderApiOnRspQryProduct pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInstrumentCallback(void * pLC_Spi, fnTraderApiOnRspQryInstrument pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryDepthMarketDataCallback(void * pLC_Spi, fnTraderApiOnRspQryDepthMarketData pCallback);
LC_CTP_API void RegisterTraderApiOnRspQrySettlementInfoCallback(void * pLC_Spi, fnTraderApiOnRspQrySettlementInfo pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryTransferBankCallback(void * pLC_Spi, fnTraderApiOnRspQryTransferBank pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInvestorPositionDetailCallback(void * pLC_Spi, fnTraderApiOnRspQryInvestorPositionDetail pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryNoticeCallback(void * pLC_Spi, fnTraderApiOnRspQryNotice pCallback);
LC_CTP_API void RegisterTraderApiOnRspQrySettlementInfoConfirmCallback(void * pLC_Spi, fnTraderApiOnRspQrySettlementInfoConfirm pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInvestorPositionCombineDetailCallback(void * pLC_Spi, fnTraderApiOnRspQryInvestorPositionCombineDetail pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryCFMMCTradingAccountKeyCallback(void * pLC_Spi, fnTraderApiOnRspQryCFMMCTradingAccountKey pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryEWarrantOffsetCallback(void * pLC_Spi, fnTraderApiOnRspQryEWarrantOffset pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryInvestorProductGroupMarginCallback(void * pLC_Spi, fnTraderApiOnRspQryInvestorProductGroupMargin pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryExchangeMarginRateCallback(void * pLC_Spi, fnTraderApiOnRspQryExchangeMarginRate pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryExchangeMarginRateAdjustCallback(void * pLC_Spi, fnTraderApiOnRspQryExchangeMarginRateAdjust pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryExchangeRateCallback(void * pLC_Spi, fnTraderApiOnRspQryExchangeRate pCallback);
LC_CTP_API void RegisterTraderApiOnRspQrySecAgentACIDMapCallback(void * pLC_Spi, fnTraderApiOnRspQrySecAgentACIDMap pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryOptionInstrTradeCostCallback(void * pLC_Spi, fnTraderApiOnRspQryOptionInstrTradeCost pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryOptionInstrCommRateCallback(void * pLC_Spi, fnTraderApiOnRspQryOptionInstrCommRate pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryExecOrderCallback(void * pLC_Spi, fnTraderApiOnRspQryExecOrder pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryForQuoteCallback(void * pLC_Spi, fnTraderApiOnRspQryForQuote pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryQuoteCallback(void * pLC_Spi, fnTraderApiOnRspQryQuote pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryTransferSerialCallback(void * pLC_Spi, fnTraderApiOnRspQryTransferSerial pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryAccountregisterCallback(void * pLC_Spi, fnTraderApiOnRspQryAccountregister pCallback);
LC_CTP_API void RegisterTraderApiOnRspErrorCallback(void * pLC_Spi, fnTraderApiOnRspError pCallback);
LC_CTP_API void RegisterTraderApiOnRtnOrderCallback(void * pLC_Spi, fnTraderApiOnRtnOrder pCallback);
LC_CTP_API void RegisterTraderApiOnRtnTradeCallback(void * pLC_Spi, fnTraderApiOnRtnTrade pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnOrderInsertCallback(void * pLC_Spi, fnTraderApiOnErrRtnOrderInsert pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnOrderActionCallback(void * pLC_Spi, fnTraderApiOnErrRtnOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnRtnInstrumentStatusCallback(void * pLC_Spi, fnTraderApiOnRtnInstrumentStatus pCallback);
LC_CTP_API void RegisterTraderApiOnRtnTradingNoticeCallback(void * pLC_Spi, fnTraderApiOnRtnTradingNotice pCallback);
LC_CTP_API void RegisterTraderApiOnRtnErrorConditionalOrderCallback(void * pLC_Spi, fnTraderApiOnRtnErrorConditionalOrder pCallback);
LC_CTP_API void RegisterTraderApiOnRtnExecOrderCallback(void * pLC_Spi, fnTraderApiOnRtnExecOrder pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnExecOrderInsertCallback(void * pLC_Spi, fnTraderApiOnErrRtnExecOrderInsert pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnExecOrderActionCallback(void * pLC_Spi, fnTraderApiOnErrRtnExecOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnForQuoteInsertCallback(void * pLC_Spi, fnTraderApiOnErrRtnForQuoteInsert pCallback);
LC_CTP_API void RegisterTraderApiOnRtnQuoteCallback(void * pLC_Spi, fnTraderApiOnRtnQuote pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnQuoteInsertCallback(void * pLC_Spi, fnTraderApiOnErrRtnQuoteInsert pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnQuoteActionCallback(void * pLC_Spi, fnTraderApiOnErrRtnQuoteAction pCallback);
LC_CTP_API void RegisterTraderApiOnRtnForQuoteRspCallback(void * pLC_Spi, fnTraderApiOnRtnForQuoteRsp pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryContractBankCallback(void * pLC_Spi, fnTraderApiOnRspQryContractBank pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryParkedOrderCallback(void * pLC_Spi, fnTraderApiOnRspQryParkedOrder pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryParkedOrderActionCallback(void * pLC_Spi, fnTraderApiOnRspQryParkedOrderAction pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryTradingNoticeCallback(void * pLC_Spi, fnTraderApiOnRspQryTradingNotice pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryBrokerTradingParamsCallback(void * pLC_Spi, fnTraderApiOnRspQryBrokerTradingParams pCallback);
LC_CTP_API void RegisterTraderApiOnRspQryBrokerTradingAlgosCallback(void * pLC_Spi, fnTraderApiOnRspQryBrokerTradingAlgos pCallback);
LC_CTP_API void RegisterTraderApiOnRtnFromBankToFutureByBankCallback(void * pLC_Spi, fnTraderApiOnRtnFromBankToFutureByBank pCallback);
LC_CTP_API void RegisterTraderApiOnRtnFromFutureToBankByBankCallback(void * pLC_Spi, fnTraderApiOnRtnFromFutureToBankByBank pCallback);
LC_CTP_API void RegisterTraderApiOnRtnRepealFromBankToFutureByBankCallback(void * pLC_Spi, fnTraderApiOnRtnRepealFromBankToFutureByBank pCallback);
LC_CTP_API void RegisterTraderApiOnRtnRepealFromFutureToBankByBankCallback(void * pLC_Spi, fnTraderApiOnRtnRepealFromFutureToBankByBank pCallback);
LC_CTP_API void RegisterTraderApiOnRtnFromBankToFutureByFutureCallback(void * pLC_Spi, fnTraderApiOnRtnFromBankToFutureByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRtnFromFutureToBankByFutureCallback(void * pLC_Spi, fnTraderApiOnRtnFromFutureToBankByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRtnRepealFromBankToFutureByFutureManualCallback(void * pLC_Spi, fnTraderApiOnRtnRepealFromBankToFutureByFutureManual pCallback);
LC_CTP_API void RegisterTraderApiOnRtnRepealFromFutureToBankByFutureManualCallback(void * pLC_Spi, fnTraderApiOnRtnRepealFromFutureToBankByFutureManual pCallback);
LC_CTP_API void RegisterTraderApiOnRtnQueryBankBalanceByFutureCallback(void * pLC_Spi, fnTraderApiOnRtnQueryBankBalanceByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnBankToFutureByFutureCallback(void * pLC_Spi, fnTraderApiOnErrRtnBankToFutureByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnFutureToBankByFutureCallback(void * pLC_Spi, fnTraderApiOnErrRtnFutureToBankByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnRepealBankToFutureByFutureManualCallback(void * pLC_Spi, fnTraderApiOnErrRtnRepealBankToFutureByFutureManual pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnRepealFutureToBankByFutureManualCallback(void * pLC_Spi, fnTraderApiOnErrRtnRepealFutureToBankByFutureManual pCallback);
LC_CTP_API void RegisterTraderApiOnErrRtnQueryBankBalanceByFutureCallback(void * pLC_Spi, fnTraderApiOnErrRtnQueryBankBalanceByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRtnRepealFromBankToFutureByFutureCallback(void * pLC_Spi, fnTraderApiOnRtnRepealFromBankToFutureByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRtnRepealFromFutureToBankByFutureCallback(void * pLC_Spi, fnTraderApiOnRtnRepealFromFutureToBankByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRspFromBankToFutureByFutureCallback(void * pLC_Spi, fnTraderApiOnRspFromBankToFutureByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRspFromFutureToBankByFutureCallback(void * pLC_Spi, fnTraderApiOnRspFromFutureToBankByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRspQueryBankAccountMoneyByFutureCallback(void * pLC_Spi, fnTraderApiOnRspQueryBankAccountMoneyByFuture pCallback);
LC_CTP_API void RegisterTraderApiOnRtnOpenAccountByBankCallback(void * pLC_Spi, fnTraderApiOnRtnOpenAccountByBank pCallback);
LC_CTP_API void RegisterTraderApiOnRtnCancelAccountByBankCallback(void * pLC_Spi, fnTraderApiOnRtnCancelAccountByBank pCallback);
LC_CTP_API void RegisterTraderApiOnRtnChangeAccountByBankCallback(void * pLC_Spi, fnTraderApiOnRtnChangeAccountByBank pCallback);

//api method porting
LC_CTP_API void * CreateLCCThostFtdcTraderApi(const char * con_path);
LC_CTP_API void ReleaseLCCThostFtdcTraderApi(void * * pLC_Api);
LC_CTP_API void TraderApiRelease(void * pLC_Api);
LC_CTP_API void TraderApiInit(void * pLC_Api);
LC_CTP_API int TraderApiJoin(void * pLC_Api);
LC_CTP_API void TraderApiRegisterFront(void * pLC_Api, char *pszFrontAddress);
LC_CTP_API void TraderApiRegisterNameServer(void * pLC_Api, char *pszNsAddress);
LC_CTP_API void TraderApiRegisterFensUserInfo(void * pLC_Api, struct CThostFtdcFensUserInfoField * pFensUserInfo);
LC_CTP_API void TraderApiRegisterSpi(void * pLC_Api, void * pLC_Spi);
LC_CTP_API void TraderApiSubscribePrivateTopic(void * pLC_Api, THOST_TE_RESUME_TYPE nResumeType);
LC_CTP_API void TraderApiSubscribePublicTopic(void * pLC_Api, THOST_TE_RESUME_TYPE nResumeType);
LC_CTP_API int TraderApiReqAuthenticate(void * pLC_Api, struct CThostFtdcReqAuthenticateField *pReqAuthenticateField, int nRequestID);
LC_CTP_API int TraderApiReqUserLogin(void * pLC_Api, struct CThostFtdcReqUserLoginField *pReqUserLoginField, int nRequestID);
LC_CTP_API int TraderApiReqUserLogout(void * pLC_Api, struct CThostFtdcUserLogoutField *pUserLogout, int nRequestID);
LC_CTP_API int TraderApiReqUserPasswordUpdate(void * pLC_Api, struct CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, int nRequestID);
LC_CTP_API int TraderApiReqTradingAccountPasswordUpdate(void * pLC_Api, struct CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, int nRequestID);
LC_CTP_API int TraderApiReqOrderInsert(void * pLC_Api, struct CThostFtdcInputOrderField *pInputOrder, int nRequestID);
LC_CTP_API int TraderApiReqParkedOrderInsert(void * pLC_Api, struct CThostFtdcParkedOrderField *pParkedOrder, int nRequestID);
LC_CTP_API int TraderApiReqParkedOrderAction(void * pLC_Api, struct CThostFtdcParkedOrderActionField *pParkedOrderAction, int nRequestID);
LC_CTP_API int TraderApiReqOrderAction(void * pLC_Api, struct CThostFtdcInputOrderActionField *pInputOrderAction, int nRequestID);
LC_CTP_API int TraderApiReqQueryMaxOrderVolume(void * pLC_Api, struct CThostFtdcQueryMaxOrderVolumeField *pQueryMaxOrderVolume, int nRequestID);
LC_CTP_API int TraderApiReqSettlementInfoConfirm(void * pLC_Api, struct CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, int nRequestID);
LC_CTP_API int TraderApiReqRemoveParkedOrder(void * pLC_Api, struct CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, int nRequestID);
LC_CTP_API int TraderApiReqRemoveParkedOrderAction(void * pLC_Api, struct CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, int nRequestID);
LC_CTP_API int TraderApiReqExecOrderInsert(void * pLC_Api, struct CThostFtdcInputExecOrderField *pInputExecOrder, int nRequestID);
LC_CTP_API int TraderApiReqExecOrderAction(void * pLC_Api, struct CThostFtdcInputExecOrderActionField *pInputExecOrderAction, int nRequestID);
LC_CTP_API int TraderApiReqForQuoteInsert(void * pLC_Api, struct CThostFtdcInputForQuoteField *pInputForQuote, int nRequestID);
LC_CTP_API int TraderApiReqQuoteInsert(void * pLC_Api, struct CThostFtdcInputQuoteField *pInputQuote, int nRequestID);
LC_CTP_API int TraderApiReqQuoteAction(void * pLC_Api, struct CThostFtdcInputQuoteActionField *pInputQuoteAction, int nRequestID);
LC_CTP_API int TraderApiReqQryOrder(void * pLC_Api, struct CThostFtdcQryOrderField *pQryOrder, int nRequestID);
LC_CTP_API int TraderApiReqQryTrade(void * pLC_Api, struct CThostFtdcQryTradeField *pQryTrade, int nRequestID);
LC_CTP_API int TraderApiReqQryInvestorPosition(void * pLC_Api, struct CThostFtdcQryInvestorPositionField *pQryInvestorPosition, int nRequestID);
LC_CTP_API int TraderApiReqQryTradingAccount(void * pLC_Api, struct CThostFtdcQryTradingAccountField *pQryTradingAccount, int nRequestID);
LC_CTP_API int TraderApiReqQryInvestor(void * pLC_Api, struct CThostFtdcQryInvestorField *pQryInvestor, int nRequestID);
LC_CTP_API int TraderApiReqQryTradingCode(void * pLC_Api, struct CThostFtdcQryTradingCodeField *pQryTradingCode, int nRequestID);
LC_CTP_API int TraderApiReqQryInstrumentMarginRate(void * pLC_Api, struct CThostFtdcQryInstrumentMarginRateField *pQryInstrumentMarginRate, int nRequestID);
LC_CTP_API int TraderApiReqQryInstrumentCommissionRate(void * pLC_Api, struct CThostFtdcQryInstrumentCommissionRateField *pQryInstrumentCommissionRate, int nRequestID);
LC_CTP_API int TraderApiReqQryExchange(void * pLC_Api, struct CThostFtdcQryExchangeField *pQryExchange, int nRequestID);
LC_CTP_API int TraderApiReqQryProduct(void * pLC_Api, struct CThostFtdcQryProductField *pQryProduct, int nRequestID);
LC_CTP_API int TraderApiReqQryInstrument(void * pLC_Api, struct CThostFtdcQryInstrumentField *pQryInstrument, int nRequestID);
LC_CTP_API int TraderApiReqQryDepthMarketData(void * pLC_Api, struct CThostFtdcQryDepthMarketDataField *pQryDepthMarketData, int nRequestID);
LC_CTP_API int TraderApiReqQrySettlementInfo(void * pLC_Api, struct CThostFtdcQrySettlementInfoField *pQrySettlementInfo, int nRequestID);
LC_CTP_API int TraderApiReqQryTransferBank(void * pLC_Api, struct CThostFtdcQryTransferBankField *pQryTransferBank, int nRequestID);
LC_CTP_API int TraderApiReqQryInvestorPositionDetail(void * pLC_Api, struct CThostFtdcQryInvestorPositionDetailField *pQryInvestorPositionDetail, int nRequestID);
LC_CTP_API int TraderApiReqQryNotice(void * pLC_Api, struct CThostFtdcQryNoticeField *pQryNotice, int nRequestID);
LC_CTP_API int TraderApiReqQrySettlementInfoConfirm(void * pLC_Api, struct CThostFtdcQrySettlementInfoConfirmField *pQrySettlementInfoConfirm, int nRequestID);
LC_CTP_API int TraderApiReqQryInvestorPositionCombineDetail(void * pLC_Api, struct CThostFtdcQryInvestorPositionCombineDetailField *pQryInvestorPositionCombineDetail, int nRequestID);
LC_CTP_API int TraderApiReqQryCFMMCTradingAccountKey(void * pLC_Api, struct CThostFtdcQryCFMMCTradingAccountKeyField *pQryCFMMCTradingAccountKey, int nRequestID);
LC_CTP_API int TraderApiReqQryEWarrantOffset(void * pLC_Api, struct CThostFtdcQryEWarrantOffsetField *pQryEWarrantOffset, int nRequestID);
LC_CTP_API int TraderApiReqQryInvestorProductGroupMargin(void * pLC_Api, struct CThostFtdcQryInvestorProductGroupMarginField *pQryInvestorProductGroupMargin, int nRequestID);
LC_CTP_API int TraderApiReqQryExchangeMarginRate(void * pLC_Api, struct CThostFtdcQryExchangeMarginRateField *pQryExchangeMarginRate, int nRequestID);
LC_CTP_API int TraderApiReqQryExchangeMarginRateAdjust(void * pLC_Api, struct CThostFtdcQryExchangeMarginRateAdjustField *pQryExchangeMarginRateAdjust, int nRequestID);
LC_CTP_API int TraderApiReqQryExchangeRate(void * pLC_Api, struct CThostFtdcQryExchangeRateField *pQryExchangeRate, int nRequestID);
LC_CTP_API int TraderApiReqQrySecAgentACIDMap(void * pLC_Api, struct CThostFtdcQrySecAgentACIDMapField *pQrySecAgentACIDMap, int nRequestID);
LC_CTP_API int TraderApiReqQryOptionInstrTradeCost(void * pLC_Api, struct CThostFtdcQryOptionInstrTradeCostField *pQryOptionInstrTradeCost, int nRequestID);
LC_CTP_API int TraderApiReqQryOptionInstrCommRate(void * pLC_Api, struct CThostFtdcQryOptionInstrCommRateField *pQryOptionInstrCommRate, int nRequestID);
LC_CTP_API int TraderApiReqQryExecOrder(void * pLC_Api, struct CThostFtdcQryExecOrderField *pQryExecOrder, int nRequestID);
LC_CTP_API int TraderApiReqQryForQuote(void * pLC_Api, struct CThostFtdcQryForQuoteField *pQryForQuote, int nRequestID);
LC_CTP_API int TraderApiReqQryQuote(void * pLC_Api, struct CThostFtdcQryQuoteField *pQryQuote, int nRequestID);
LC_CTP_API int TraderApiReqQryTransferSerial(void * pLC_Api, struct CThostFtdcQryTransferSerialField *pQryTransferSerial, int nRequestID);
LC_CTP_API int TraderApiReqQryAccountregister(void * pLC_Api, struct CThostFtdcQryAccountregisterField *pQryAccountregister, int nRequestID);
LC_CTP_API int TraderApiReqQryContractBank(void * pLC_Api, struct CThostFtdcQryContractBankField *pQryContractBank, int nRequestID);
LC_CTP_API int TraderApiReqQryParkedOrder(void * pLC_Api, struct CThostFtdcQryParkedOrderField *pQryParkedOrder, int nRequestID);
LC_CTP_API int TraderApiReqQryParkedOrderAction(void * pLC_Api, struct CThostFtdcQryParkedOrderActionField *pQryParkedOrderAction, int nRequestID);
LC_CTP_API int TraderApiReqQryTradingNotice(void * pLC_Api, struct CThostFtdcQryTradingNoticeField *pQryTradingNotice, int nRequestID);
LC_CTP_API int TraderApiReqQryBrokerTradingParams(void * pLC_Api, struct CThostFtdcQryBrokerTradingParamsField *pQryBrokerTradingParams, int nRequestID);
LC_CTP_API int TraderApiReqQryBrokerTradingAlgos(void * pLC_Api, struct CThostFtdcQryBrokerTradingAlgosField *pQryBrokerTradingAlgos, int nRequestID);
LC_CTP_API int TraderApiReqFromBankToFutureByFuture(void * pLC_Api, struct CThostFtdcReqTransferField *pReqTransfer, int nRequestID);
LC_CTP_API int TraderApiReqFromFutureToBankByFuture(void * pLC_Api, struct CThostFtdcReqTransferField *pReqTransfer, int nRequestID);
LC_CTP_API int TraderApiReqQueryBankAccountMoneyByFuture(void * pLC_Api, struct CThostFtdcReqQueryAccountField *pReqQueryAccount, int nRequestID);

#ifdef __cplusplus
}
#endif
#endif
